* Goals

- To create a [[https://web.archive.org/web/20111109113907/http://cubiclemuses.com/cm/blog/2007/misp_final.html?showcomments=yes][Misp-like]] language hosted on JavaScript
- Forms bottom-out in JavaScript data
- Auto-currying
- Lightweight syntactic forms

* TODOs
** DONE Create currying machinery and wire into namespace
** DONE Implement ~{a | ...}~ reader that creates a ~["'fn" ["'a"] ...]~ structure.
** DONE Create a simple test framework to test core.lisp implementations.
** DONE Explore ML refs
*** DONE Implement ~ref~, ~swap!~, ~cas!~, and ~snap~
*** DONE Test implementation
*** DONE Add ref discussion to tut.txt (w/ validator)
*** DONE Add counter closure example and tests.
** DONE Migrate appropriate functions to ~() =>~ form.
** DONE Add commentary to lisp.js
** DONE Write blog post (credit Mary RC, [[http://www.arclanguage.org/tut.txt][pg]], and Tay), mention lemonad
** DONE Expose `part` as curried function
** TODO Implement John D Cook's minimal math lib https://www.johndcook.com/blog/2021/01/05/bootstrapping-math-library/
** TODO Port environments to Maps
** TODO microKanren
** TODO Explore Symbols instead of encoded strings for symbols
** TODO Explore pulling in more of lemonad
** TODO Explore Scheme-48 modules
** TODO Explore "tables" and the queries around them
** TODO Explore in-browser REPL, listener, editor, etc., a la XLISP-STAT
** TODO Implement ~eval~
